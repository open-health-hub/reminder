---
- name: Install packages required to build Debian packages in general
  action: apt
    pkg={{ item }}
  with_items:
    - equivs
    - devscripts
    - build-essential

- name: Remove any existing build directory
  file:
    state=absent
    path={{ build_dir }}

- name: Create build directory
  file:
    state=directory
    path={{ build_dir }}/{{ package_name }}

- name: Download code
  command:
    wget -O {{ build_dir }}/{{ package_name }}.tar.gz {{ source }}/archive/{{ commit }}.tar.gz

- name: Extract
  command:
    tar xfz {{ build_dir }}/{{ package_name }}.tar.gz --strip-components=1 --directory={{ build_dir }}/{{ package_name }}

- name: Set role
  template:
    src=role.py
    dest={{ build_dir }}/{{ package_name }}/takeyourmeds/settings/role.py

- name: Set custom/secret settings
  template:
    src=custom.py
    dest={{ build_dir }}/{{ package_name }}/takeyourmeds/settings/custom.py
  no_log: true

- name: Install the specific packages required to build our Debian packages
  command:
    mk-build-deps --install --remove --tool "apt-get --no-install-recommends --target-release={{ debian_release }}-backports --yes" debian/control
  args:
    chdir: "{{ build_dir }}/{{ package_name }}"

- name: Build package
  shell:
    dpkg-buildpackage -uc -us -b 2>&1
  args:
    chdir: "{{ build_dir }}/{{ package_name }}"
  register: out
- debug: var=out.stdout_lines

- name: Stop services to avoid race conditions
  action: service
    name={{ item }}
    state=stopped
  with_items:
    - nginx
    - takeyourmeds-celery
    - takeyourmeds-gunicorn
  ignore_errors: yes # Permit initial installation

- name: Install package
  shell:
    dpkg -i {{ build_dir }}/{{ package_name }}_*.deb

- name: Setup PostgreSQL user
  sudo: yes
  sudo_user: postgres
  postgresql_user:
    name=takeyourmeds
    password=takeyourmeds

- name: Setup PostgreSQL database
  sudo: yes
  sudo_user: postgres
  postgresql_db:
    name=takeyourmeds
    owner=takeyourmeds
    encoding=UTF-8

- name: Run migrations
  sudo: yes
  sudo_user: www-data
  shell:
    "{{ base_dir }}/bin/manage.py migrate --verbosity=2 --noinput 2>&1"
  register: out
- debug: var=out.stdout_lines

- name: collectstatic
  command:
    "{{ base_dir }}/bin/manage.py collectstatic --verbosity=2 --noinput --clear --link"

- name: Start services again
  action: service
    name={{ item }}
    state=started
  with_items:
    - takeyourmeds-gunicorn
    - takeyourmeds-celery
    - nginx
